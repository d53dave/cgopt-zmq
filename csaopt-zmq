#!/usr/bin/env python

import sys
import click
import logging
from pyhocon import ConfigFactory


def check_python(major, minor):
    currentVersion = sys.version_info
    if currentVersion[0] == major and currentVersion[1] >= minor:
        pass
    else:
        sys.stderr.write("[%s] - Error: Your Python interpreter must be %d.%d or greater (within major version %d)\n" % (sys.argv[0], major, minor, major   ) )
        sys.exit(-1)
    return 0


def setlogger(level, format):
    levels = {
        'DEBUG': logging.DEBUG,
        'INFO': logging.INFO,
        'WARNING': logging.WARNING,
        'ERROR': logging.ERROR,
        'CRITICAL': logging.CRITICAL
    }

    logger = logging.getLogger()
    handler = logging.StreamHandler()
    logger.addHandler(handler)

    if format:
        formatter = logging.Formatter(format)
        handler.setFormatter(formatter)

    loglevel = levels[level]
    if loglevel is not None:
        logger.setLevel(loglevel)


@click.command()
@click.option('--config', '-c', default='conf/server.conf', type=click.Path(), help='Path to config file (default: conf/server.conf)')
@click.option('--port-data', '-d', default=-1, help='Port for data connections')
@click.option('--port-management', '-m', default=-1, help='Port for group management')
def csaopt_zmq(config, port_data, port_management):
    print('Parsing config file: ' + config)
    conf = ConfigFactory.parse_file(config)
    setlogger(conf.get_string('logging.level'), conf.get_string('logging.format'))    


if __name__ == '__main__':
    check_python(3, 5)
    csaopt_zmq()